#+TITLE: irony-server-install
#+AUTHOR: zakudriver
#+DATE: 2020-05-29
#+DESCRIPTION: 安装c++补全后端irony
#+HUGO_AUTO_SET_LASTMOD: t
#+HUGO_TAGS: emacs
#+HUGO_CATEGORIES: code
#+HUGO_DRAFT: false
#+HUGO_BASE_DIR: ~/WWW-BUILDER
#+HUGO_SECTION: posts


* Mac 

1. 首先需安装cmake和llvm
   #+BEGIN_SRC shell
     brew install cmake llvm
   #+END_SRC

2. emacs里执行M-x irony-install-server得到安装执行命令
   #+BEGIN_SRC shell
     cmake -DCMAKE_INSTALL_PREFIX\=/Users/kumotyou/.emacs.d/irony/ \
     /Users/kumotyou/.emacs.d/elpa/irony-20200130.849/server \
     && cmake --build . --use-stderr --config Release --target install
   #+END_SRC

3. 添加环境变量
   #+BEGIN_SRC shell
     -DCMAKE_PREFIX_PATH=/usr/local/opt/llvm
     -DCMAKE_INSTALL_RPATH_USE_LINK_PATH=ON
     -DLIBCLANG_INCLUDE_DIR=/usr/local/opt/llvm/include
     -DLIBCLANG_LIBRARY=/usr/local/opt/llvm/lib/libclang.dylib
   #+END_SRC

4. 最终编译命令
   #+BEGIN_SRC shell
     cmake -DCMAKE_INSTALL_PREFIX\=/Users/kumotyou/.emacs.d/irony/ \
     -DCMAKE_PREFIX_PATH=/usr/local/opt/llvm \
     -DCMAKE_INSTALL_RPATH_USE_LINK_PATH=ON \
     -DLIBCLANG_INCLUDE_DIR=/usr/local/opt/llvm/include \
     -DLIBCLANG_LIBRARY=/usr/local/opt/llvm/lib/libclang.dylib \
     /Users/kumotyou/.emacs.d/elpa/irony-20200130.849/server \
     && cmake --build . --use-stderr --config Release --target install
   #+END_SRC


* Ubuntu

1. 拉取ccls源码, 并进入ccls根目录
   #+BEGIN_SRC shell
     git clone https://github.com/MaskRay/ccls

     cd ccls
   #+END_SRC

2. 拉取第三方依赖. (主要是rapidjson)
   #+BEGIN_SRC shell
     git submodule update --init --recursive
   #+END_SRC

3. 下载llvm的二进制包并解压
   #+BEGIN_SRC shell
     wget -c http://releases.llvm.org/9.0.0/clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz

     tar xf clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz
   #+END_SRC

4. 在根目录下执行cmake 执行结果保存到Release文件夹中
   #+BEGIN_SRC shell
     cmake -H. -BRelease -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=/path/to/clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04

     cmake --build Release
   #+END_SRC

5. 开始编译
   #+BEGIN_SRC shell
     cd Release

     make -j4 #使用4线程编译
   #+END_SRC

6. 编译完成, 安装
   #+BEGIN_SRC shell
     sudo make install
   #+END_SRC


